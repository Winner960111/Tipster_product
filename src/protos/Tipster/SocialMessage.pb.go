// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: src/protos/Tipster/SocialMessage.proto

package Tipster

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Defines different possible feed actions.
type FeedActionType int32

const (
	// Default or unspecified action
	FeedActionType_FEED_ACTION_UNSPECIFIED FeedActionType = 0
	// The user posted a tip
	FeedActionType_FEED_ACTION_POST_TIP FeedActionType = 1
	// The user liked a tip
	FeedActionType_FEED_ACTION_LIKE_TIP FeedActionType = 2
	// The user commented on a tip
	FeedActionType_FEED_ACTION_COMMENT_TIP FeedActionType = 3
	// The user shared a tip
	FeedActionType_FEED_ACTION_SHARE_TIP FeedActionType = 4
)

// Enum value maps for FeedActionType.
var (
	FeedActionType_name = map[int32]string{
		0: "FEED_ACTION_UNSPECIFIED",
		1: "FEED_ACTION_POST_TIP",
		2: "FEED_ACTION_LIKE_TIP",
		3: "FEED_ACTION_COMMENT_TIP",
		4: "FEED_ACTION_SHARE_TIP",
	}
	FeedActionType_value = map[string]int32{
		"FEED_ACTION_UNSPECIFIED": 0,
		"FEED_ACTION_POST_TIP":    1,
		"FEED_ACTION_LIKE_TIP":    2,
		"FEED_ACTION_COMMENT_TIP": 3,
		"FEED_ACTION_SHARE_TIP":   4,
	}
)

func (x FeedActionType) Enum() *FeedActionType {
	p := new(FeedActionType)
	*p = x
	return p
}

func (x FeedActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeedActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_src_protos_Tipster_SocialMessage_proto_enumTypes[0].Descriptor()
}

func (FeedActionType) Type() protoreflect.EnumType {
	return &file_src_protos_Tipster_SocialMessage_proto_enumTypes[0]
}

func (x FeedActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeedActionType.Descriptor instead.
func (FeedActionType) EnumDescriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{0}
}

// -------------------
// Update Tip Comment
// -------------------
type UpdateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentRequest) Reset() {
	*x = UpdateCommentRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentRequest) ProtoMessage() {}

func (x *UpdateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommentRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *UpdateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentResponse) Reset() {
	*x = UpdateCommentResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentResponse) ProtoMessage() {}

func (x *UpdateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentResponse.ProtoReflect.Descriptor instead.
func (*UpdateCommentResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateCommentResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateCommentResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// -------------------
// -------------------
// Delete Tip Comment
// -------------------
type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCommentResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteCommentResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// -------------------
// Create Tip
// -------------------
type CreateTipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TipsterId     string                 `protobuf:"bytes,1,opt,name=TipsterId,proto3" json:"TipsterId,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	ShareType     string                 `protobuf:"bytes,5,opt,name=ShareType,proto3" json:"ShareType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTipRequest) Reset() {
	*x = CreateTipRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTipRequest) ProtoMessage() {}

func (x *CreateTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTipRequest.ProtoReflect.Descriptor instead.
func (*CreateTipRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTipRequest) GetTipsterId() string {
	if x != nil {
		return x.TipsterId
	}
	return ""
}

func (x *CreateTipRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTipRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateTipRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateTipRequest) GetShareType() string {
	if x != nil {
		return x.ShareType
	}
	return ""
}

type CreateTipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *TipData               `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTipResponse) Reset() {
	*x = CreateTipResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTipResponse) ProtoMessage() {}

func (x *CreateTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTipResponse.ProtoReflect.Descriptor instead.
func (*CreateTipResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTipResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateTipResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateTipResponse) GetData() *TipData {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
// Get Tip
// -------------------
type GetTipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TipId         string                 `protobuf:"bytes,1,opt,name=TipId,proto3" json:"TipId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTipRequest) Reset() {
	*x = GetTipRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipRequest) ProtoMessage() {}

func (x *GetTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipRequest.ProtoReflect.Descriptor instead.
func (*GetTipRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{6}
}

func (x *GetTipRequest) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

type GetTipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *TipData               `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTipResponse) Reset() {
	*x = GetTipResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipResponse) ProtoMessage() {}

func (x *GetTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipResponse.ProtoReflect.Descriptor instead.
func (*GetTipResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{7}
}

func (x *GetTipResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetTipResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetTipResponse) GetData() *TipData {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
// Update Tip
// -------------------
type UpdateTipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TipId         string                 `protobuf:"bytes,1,opt,name=TipId,proto3" json:"TipId,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	ShareType     string                 `protobuf:"bytes,5,opt,name=ShareType,proto3" json:"ShareType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTipRequest) Reset() {
	*x = UpdateTipRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTipRequest) ProtoMessage() {}

func (x *UpdateTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTipRequest.ProtoReflect.Descriptor instead.
func (*UpdateTipRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTipRequest) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

func (x *UpdateTipRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTipRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateTipRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateTipRequest) GetShareType() string {
	if x != nil {
		return x.ShareType
	}
	return ""
}

type UpdateTipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTipResponse) Reset() {
	*x = UpdateTipResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTipResponse) ProtoMessage() {}

func (x *UpdateTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTipResponse.ProtoReflect.Descriptor instead.
func (*UpdateTipResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTipResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateTipResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// -------------------
// Delete Tip
// -------------------
type DeleteTipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TipId         string                 `protobuf:"bytes,1,opt,name=TipId,proto3" json:"TipId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTipRequest) Reset() {
	*x = DeleteTipRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTipRequest) ProtoMessage() {}

func (x *DeleteTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTipRequest.ProtoReflect.Descriptor instead.
func (*DeleteTipRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTipRequest) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

type DeleteTipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTipResponse) Reset() {
	*x = DeleteTipResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTipResponse) ProtoMessage() {}

func (x *DeleteTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTipResponse.ProtoReflect.Descriptor instead.
func (*DeleteTipResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTipResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteTipResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// -------------------
// List Tips
// -------------------
type ListTipsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=NextCursor,proto3" json:"NextCursor,omitempty"`
	TipsterId     string                 `protobuf:"bytes,3,opt,name=TipsterId,proto3" json:"TipsterId,omitempty"` // Optional: to filter tips by tipster
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTipsRequest) Reset() {
	*x = ListTipsRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTipsRequest) ProtoMessage() {}

func (x *ListTipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTipsRequest.ProtoReflect.Descriptor instead.
func (*ListTipsRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{12}
}

func (x *ListTipsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTipsRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListTipsRequest) GetTipsterId() string {
	if x != nil {
		return x.TipsterId
	}
	return ""
}

type ListTipsResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          string                         `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                         `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *ListTipsResponse_ListTipsData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTipsResponse) Reset() {
	*x = ListTipsResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTipsResponse) ProtoMessage() {}

func (x *ListTipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTipsResponse.ProtoReflect.Descriptor instead.
func (*ListTipsResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{13}
}

func (x *ListTipsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListTipsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListTipsResponse) GetData() *ListTipsResponse_ListTipsData {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
// Common Tip Data Structure
// -------------------
type TipData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TipId         string                 `protobuf:"bytes,1,opt,name=TipId,proto3" json:"TipId,omitempty"`
	TipsterId     string                 `protobuf:"bytes,2,opt,name=TipsterId,proto3" json:"TipsterId,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	Tags          []string               `protobuf:"bytes,5,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Likes         []*UserDetail          `protobuf:"bytes,6,rep,name=Likes,proto3" json:"Likes,omitempty"`
	Unlikes       []*UserDetail          `protobuf:"bytes,7,rep,name=Unlikes,proto3" json:"Unlikes,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	ShareType     string                 `protobuf:"bytes,10,opt,name=ShareType,proto3" json:"ShareType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TipData) Reset() {
	*x = TipData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TipData) ProtoMessage() {}

func (x *TipData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TipData.ProtoReflect.Descriptor instead.
func (*TipData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{14}
}

func (x *TipData) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

func (x *TipData) GetTipsterId() string {
	if x != nil {
		return x.TipsterId
	}
	return ""
}

func (x *TipData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TipData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TipData) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TipData) GetLikes() []*UserDetail {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *TipData) GetUnlikes() []*UserDetail {
	if x != nil {
		return x.Unlikes
	}
	return nil
}

func (x *TipData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TipData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TipData) GetShareType() string {
	if x != nil {
		return x.ShareType
	}
	return ""
}

// -------------------
// Create User
// -------------------
type CreateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserName      string                 `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{15}
}

func (x *CreateUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// User registration response message
type CreateUserResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Code          string                       `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                       `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *CreateUserResponse_UserData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{16}
}

func (x *CreateUserResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateUserResponse) GetData() *CreateUserResponse_UserData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDetail) Reset() {
	*x = UserDetail{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetail) ProtoMessage() {}

func (x *UserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetail.ProtoReflect.Descriptor instead.
func (*UserDetail) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{17}
}

func (x *UserDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDetail) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// -------------------
// Get User
// -------------------
type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Code          string                       `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                       `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *CreateUserResponse_UserData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetUserResponse) GetData() *CreateUserResponse_UserData {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
// Update User
// -------------------
type UpdateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateUserResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// -------------------
// Delete User
// -------------------
type DeleteUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteUserResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// -------------------
// List User
// -------------------
type ListUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=NextCursor,proto3" json:"NextCursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserRequest) Reset() {
	*x = ListUserRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRequest) ProtoMessage() {}

func (x *ListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{24}
}

func (x *ListUserRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type ListUserResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          string                          `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                          `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *ListUserResponse_ListUsersData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserResponse) Reset() {
	*x = ListUserResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResponse) ProtoMessage() {}

func (x *ListUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResponse.ProtoReflect.Descriptor instead.
func (*ListUserResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{25}
}

func (x *ListUserResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListUserResponse) GetData() *ListUserResponse_ListUsersData {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
//
//	Like / Unlike Tip
//
// -------------------
type LikeTipRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user who performs the "like" action
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// The Tip ID to be liked
	TipId         string `protobuf:"bytes,2,opt,name=TipId,proto3" json:"TipId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeTipRequest) Reset() {
	*x = LikeTipRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeTipRequest) ProtoMessage() {}

func (x *LikeTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeTipRequest.ProtoReflect.Descriptor instead.
func (*LikeTipRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{26}
}

func (x *LikeTipRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LikeTipRequest) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

type LikeTipResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Standard three-layer response format
	Code          string                       `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                       `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *LikeTipResponse_LikeTipData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeTipResponse) Reset() {
	*x = LikeTipResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeTipResponse) ProtoMessage() {}

func (x *LikeTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeTipResponse.ProtoReflect.Descriptor instead.
func (*LikeTipResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{27}
}

func (x *LikeTipResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LikeTipResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LikeTipResponse) GetData() *LikeTipResponse_LikeTipData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UnlikeTipRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user who performs the "unlike" action
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// The Tip ID from which the user removes the "like"
	TipId         string `protobuf:"bytes,2,opt,name=TipId,proto3" json:"TipId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeTipRequest) Reset() {
	*x = UnlikeTipRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeTipRequest) ProtoMessage() {}

func (x *UnlikeTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeTipRequest.ProtoReflect.Descriptor instead.
func (*UnlikeTipRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{28}
}

func (x *UnlikeTipRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UnlikeTipRequest) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

// For Unlike responses, we can reuse LikeTipResponse structure if the logic is the same.
// You can alias it if you want separate message names.
type LikeTipResponseAlias struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          string                            `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                            `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *LikeTipResponseAlias_LikeTipData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeTipResponseAlias) Reset() {
	*x = LikeTipResponseAlias{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeTipResponseAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeTipResponseAlias) ProtoMessage() {}

func (x *LikeTipResponseAlias) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeTipResponseAlias.ProtoReflect.Descriptor instead.
func (*LikeTipResponseAlias) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{29}
}

func (x *LikeTipResponseAlias) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LikeTipResponseAlias) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LikeTipResponseAlias) GetData() *LikeTipResponseAlias_LikeTipData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UnlikeTipResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          string                           `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                           `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *UnlikeTipResponse_UnLikeTipData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeTipResponse) Reset() {
	*x = UnlikeTipResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeTipResponse) ProtoMessage() {}

func (x *UnlikeTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeTipResponse.ProtoReflect.Descriptor instead.
func (*UnlikeTipResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{30}
}

func (x *UnlikeTipResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UnlikeTipResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UnlikeTipResponse) GetData() *UnlikeTipResponse_UnLikeTipData {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
//
//	Comment / DeleteComment
//
// -------------------
type CommentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	TipId         string                 `protobuf:"bytes,2,opt,name=TipId,proto3" json:"TipId,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ParentId      string                 `protobuf:"bytes,4,opt,name=ParentId,proto3" json:"ParentId,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	Likes         []*UserDetail          `protobuf:"bytes,8,rep,name=Likes,proto3" json:"Likes,omitempty"`
	Unlikes       []*UserDetail          `protobuf:"bytes,9,rep,name=Unlikes,proto3" json:"Unlikes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{31}
}

func (x *CommentInfo) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *CommentInfo) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

func (x *CommentInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommentInfo) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CommentInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CommentInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CommentInfo) GetLikes() []*UserDetail {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *CommentInfo) GetUnlikes() []*UserDetail {
	if x != nil {
		return x.Unlikes
	}
	return nil
}

type CommentOnTipRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TipId         string                 `protobuf:"bytes,2,opt,name=TipId,proto3" json:"TipId,omitempty"`
	ParentId      string                 `protobuf:"bytes,3,opt,name=ParentId,proto3" json:"ParentId,omitempty"` // Optional: for replies to comments
	Content       string                 `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentOnTipRequest) Reset() {
	*x = CommentOnTipRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentOnTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentOnTipRequest) ProtoMessage() {}

func (x *CommentOnTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentOnTipRequest.ProtoReflect.Descriptor instead.
func (*CommentOnTipRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{32}
}

func (x *CommentOnTipRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommentOnTipRequest) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

func (x *CommentOnTipRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CommentOnTipRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CommentOnTipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *CommentInfo           `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentOnTipResponse) Reset() {
	*x = CommentOnTipResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentOnTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentOnTipResponse) ProtoMessage() {}

func (x *CommentOnTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentOnTipResponse.ProtoReflect.Descriptor instead.
func (*CommentOnTipResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{33}
}

func (x *CommentOnTipResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CommentOnTipResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CommentOnTipResponse) GetData() *CommentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
//
//	ListTipComments
//
// -------------------
type ListTipCommentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Tip ID for which we list comments
	TipId         string `protobuf:"bytes,1,opt,name=TipId,proto3" json:"TipId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTipCommentsRequest) Reset() {
	*x = ListTipCommentsRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTipCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTipCommentsRequest) ProtoMessage() {}

func (x *ListTipCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTipCommentsRequest.ProtoReflect.Descriptor instead.
func (*ListTipCommentsRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{34}
}

func (x *ListTipCommentsRequest) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

type ListTipCommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Comments      []*CommentInfo         `protobuf:"bytes,3,rep,name=Comments,proto3" json:"Comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTipCommentsResponse) Reset() {
	*x = ListTipCommentsResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTipCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTipCommentsResponse) ProtoMessage() {}

func (x *ListTipCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTipCommentsResponse.ProtoReflect.Descriptor instead.
func (*ListTipCommentsResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{35}
}

func (x *ListTipCommentsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListTipCommentsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListTipCommentsResponse) GetComments() []*CommentInfo {
	if x != nil {
		return x.Comments
	}
	return nil
}

type LikeCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CommentId     string                 `protobuf:"bytes,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentRequest) Reset() {
	*x = LikeCommentRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentRequest) ProtoMessage() {}

func (x *LikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentRequest.ProtoReflect.Descriptor instead.
func (*LikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{36}
}

func (x *LikeCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LikeCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type LikeCommentResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          string                               `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                               `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *LikeCommentResponse_LikeCommentData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentResponse) Reset() {
	*x = LikeCommentResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentResponse) ProtoMessage() {}

func (x *LikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentResponse.ProtoReflect.Descriptor instead.
func (*LikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{37}
}

func (x *LikeCommentResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LikeCommentResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LikeCommentResponse) GetData() *LikeCommentResponse_LikeCommentData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UnlikeCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CommentId     string                 `protobuf:"bytes,2,opt,name=CommentId,proto3" json:"CommentId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeCommentRequest) Reset() {
	*x = UnlikeCommentRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeCommentRequest) ProtoMessage() {}

func (x *UnlikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeCommentRequest.ProtoReflect.Descriptor instead.
func (*UnlikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{38}
}

func (x *UnlikeCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UnlikeCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type UnlikeCommentResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          string                                   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                                   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *UnlikeCommentResponse_UnlikeCommentData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeCommentResponse) Reset() {
	*x = UnlikeCommentResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeCommentResponse) ProtoMessage() {}

func (x *UnlikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeCommentResponse.ProtoReflect.Descriptor instead.
func (*UnlikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{39}
}

func (x *UnlikeCommentResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UnlikeCommentResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UnlikeCommentResponse) GetData() *UnlikeCommentResponse_UnlikeCommentData {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
//
//	ReplyComment / ListCommentReplies (Thread-like mode)
//
// -------------------
type ReplyCommentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user who replies
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// The comment ID to which this reply is attached
	ParentCommentId string `protobuf:"bytes,2,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	// The reply content
	Content       string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentRequest) Reset() {
	*x = ReplyCommentRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentRequest) ProtoMessage() {}

func (x *ReplyCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentRequest.ProtoReflect.Descriptor instead.
func (*ReplyCommentRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{40}
}

func (x *ReplyCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReplyCommentRequest) GetParentCommentId() string {
	if x != nil {
		return x.ParentCommentId
	}
	return ""
}

func (x *ReplyCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ReplyCommentResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          string                          `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                          `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *ReplyCommentResponse_ReplyData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentResponse) Reset() {
	*x = ReplyCommentResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentResponse) ProtoMessage() {}

func (x *ReplyCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentResponse.ProtoReflect.Descriptor instead.
func (*ReplyCommentResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{41}
}

func (x *ReplyCommentResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReplyCommentResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ReplyCommentResponse) GetData() *ReplyCommentResponse_ReplyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListCommentRepliesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The parent comment ID for which we want to list replies
	ParentCommentId string `protobuf:"bytes,1,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListCommentRepliesRequest) Reset() {
	*x = ListCommentRepliesRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentRepliesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentRepliesRequest) ProtoMessage() {}

func (x *ListCommentRepliesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentRepliesRequest.ProtoReflect.Descriptor instead.
func (*ListCommentRepliesRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{42}
}

func (x *ListCommentRepliesRequest) GetParentCommentId() string {
	if x != nil {
		return x.ParentCommentId
	}
	return ""
}

type ListCommentRepliesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Replies       []*ReplyInfo           `protobuf:"bytes,3,rep,name=Replies,proto3" json:"Replies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentRepliesResponse) Reset() {
	*x = ListCommentRepliesResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentRepliesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentRepliesResponse) ProtoMessage() {}

func (x *ListCommentRepliesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentRepliesResponse.ProtoReflect.Descriptor instead.
func (*ListCommentRepliesResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{43}
}

func (x *ListCommentRepliesResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListCommentRepliesResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListCommentRepliesResponse) GetReplies() []*ReplyInfo {
	if x != nil {
		return x.Replies
	}
	return nil
}

type ReplyInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ReplyId         string                 `protobuf:"bytes,1,opt,name=ReplyId,proto3" json:"ReplyId,omitempty"`
	ParentCommentId string                 `protobuf:"bytes,2,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	UserId          string                 `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Content         string                 `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	DateCreated     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=DateCreated,proto3" json:"DateCreated,omitempty"`
	Likes           []*UserDetail          `protobuf:"bytes,6,rep,name=Likes,proto3" json:"Likes,omitempty"`
	Unlikes         []*UserDetail          `protobuf:"bytes,7,rep,name=Unlikes,proto3" json:"Unlikes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReplyInfo) Reset() {
	*x = ReplyInfo{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInfo) ProtoMessage() {}

func (x *ReplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInfo.ProtoReflect.Descriptor instead.
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{44}
}

func (x *ReplyInfo) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *ReplyInfo) GetParentCommentId() string {
	if x != nil {
		return x.ParentCommentId
	}
	return ""
}

func (x *ReplyInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReplyInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyInfo) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *ReplyInfo) GetLikes() []*UserDetail {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *ReplyInfo) GetUnlikes() []*UserDetail {
	if x != nil {
		return x.Unlikes
	}
	return nil
}

// --------------------
//
//	ListComments
//
// --------------------
type ListCommentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=NextCursor,proto3" json:"NextCursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsRequest) Reset() {
	*x = ListCommentsRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsRequest) ProtoMessage() {}

func (x *ListCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsRequest.ProtoReflect.Descriptor instead.
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{45}
}

func (x *ListCommentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCommentsRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type ListCommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Comments      []*CommentInfo         `protobuf:"bytes,3,rep,name=Comments,proto3" json:"Comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsResponse) Reset() {
	*x = ListCommentsResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsResponse) ProtoMessage() {}

func (x *ListCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsResponse.ProtoReflect.Descriptor instead.
func (*ListCommentsResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{46}
}

func (x *ListCommentsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListCommentsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListCommentsResponse) GetComments() []*CommentInfo {
	if x != nil {
		return x.Comments
	}
	return nil
}

// -------------------
//
//	ShareTip
//
// -------------------
type ShareTipRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user who shares the tip
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// The Tip ID to share
	TipId string `protobuf:"bytes,2,opt,name=TipId,proto3" json:"TipId,omitempty"`
	// e.g. "PUBLIC", "FRIENDS_ONLY", "STORY"
	ShareType     string `protobuf:"bytes,3,opt,name=ShareType,proto3" json:"ShareType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareTipRequest) Reset() {
	*x = ShareTipRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareTipRequest) ProtoMessage() {}

func (x *ShareTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareTipRequest.ProtoReflect.Descriptor instead.
func (*ShareTipRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{47}
}

func (x *ShareTipRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShareTipRequest) GetTipId() string {
	if x != nil {
		return x.TipId
	}
	return ""
}

func (x *ShareTipRequest) GetShareType() string {
	if x != nil {
		return x.ShareType
	}
	return ""
}

type ShareTipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareTipResponse) Reset() {
	*x = ShareTipResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareTipResponse) ProtoMessage() {}

func (x *ShareTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareTipResponse.ProtoReflect.Descriptor instead.
func (*ShareTipResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{48}
}

func (x *ShareTipResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShareTipResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// -------------------
//
//	Follow / Unfollow Tipster
//
// -------------------
type FollowTipsterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user who follows
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// The Tipster ID to follow
	TipsterId     string `protobuf:"bytes,2,opt,name=TipsterId,proto3" json:"TipsterId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FollowTipsterRequest) Reset() {
	*x = FollowTipsterRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowTipsterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowTipsterRequest) ProtoMessage() {}

func (x *FollowTipsterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowTipsterRequest.ProtoReflect.Descriptor instead.
func (*FollowTipsterRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{49}
}

func (x *FollowTipsterRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FollowTipsterRequest) GetTipsterId() string {
	if x != nil {
		return x.TipsterId
	}
	return ""
}

type FollowTipsterResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          string                            `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                            `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *FollowTipsterResponse_FollowData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FollowTipsterResponse) Reset() {
	*x = FollowTipsterResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowTipsterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowTipsterResponse) ProtoMessage() {}

func (x *FollowTipsterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowTipsterResponse.ProtoReflect.Descriptor instead.
func (*FollowTipsterResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{50}
}

func (x *FollowTipsterResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FollowTipsterResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FollowTipsterResponse) GetData() *FollowTipsterResponse_FollowData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UnFollowTipsterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user who follows
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// The Tipster ID to follow
	TipsterId     string `protobuf:"bytes,2,opt,name=TipsterId,proto3" json:"TipsterId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnFollowTipsterRequest) Reset() {
	*x = UnFollowTipsterRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnFollowTipsterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnFollowTipsterRequest) ProtoMessage() {}

func (x *UnFollowTipsterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnFollowTipsterRequest.ProtoReflect.Descriptor instead.
func (*UnFollowTipsterRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{51}
}

func (x *UnFollowTipsterRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UnFollowTipsterRequest) GetTipsterId() string {
	if x != nil {
		return x.TipsterId
	}
	return ""
}

type UnfollowTipsterResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          string                                `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                                `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *UnfollowTipsterResponse_UnfollowData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnfollowTipsterResponse) Reset() {
	*x = UnfollowTipsterResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnfollowTipsterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfollowTipsterResponse) ProtoMessage() {}

func (x *UnfollowTipsterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfollowTipsterResponse.ProtoReflect.Descriptor instead.
func (*UnfollowTipsterResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{52}
}

func (x *UnfollowTipsterResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UnfollowTipsterResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UnfollowTipsterResponse) GetData() *UnfollowTipsterResponse_UnfollowData {
	if x != nil {
		return x.Data
	}
	return nil
}

// -------------------
//
//	ListFollowingFeed
//
// -------------------
type ListFollowingFeedRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user whose feed we want
	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// Number of items to retrieve each time
	PageSize int32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	// Cursor for pagination
	NextCursor    string `protobuf:"bytes,3,opt,name=NextCursor,proto3" json:"NextCursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFollowingFeedRequest) Reset() {
	*x = ListFollowingFeedRequest{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFollowingFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFollowingFeedRequest) ProtoMessage() {}

func (x *ListFollowingFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFollowingFeedRequest.ProtoReflect.Descriptor instead.
func (*ListFollowingFeedRequest) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{53}
}

func (x *ListFollowingFeedRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListFollowingFeedRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFollowingFeedRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type ListFollowingFeedResponse struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Code          string                                           `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                                           `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Data          *ListFollowingFeedResponse_ListFollowingFeedData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFollowingFeedResponse) Reset() {
	*x = ListFollowingFeedResponse{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFollowingFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFollowingFeedResponse) ProtoMessage() {}

func (x *ListFollowingFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFollowingFeedResponse.ProtoReflect.Descriptor instead.
func (*ListFollowingFeedResponse) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{54}
}

func (x *ListFollowingFeedResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ListFollowingFeedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListFollowingFeedResponse) GetData() *ListFollowingFeedResponse_ListFollowingFeedData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Represents a single feed event or item
type FeedItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique identifier for this feed item
	FeedId string `protobuf:"bytes,1,opt,name=FeedId,proto3" json:"FeedId,omitempty"`
	// The user who performed this action
	AuthorId string `protobuf:"bytes,2,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	// E.g. "POST_TIP", "LIKE_TIP", "COMMENT_TIP", "SHARE_TIP"
	Action FeedActionType `protobuf:"varint,3,opt,name=Action,proto3,enum=protos.Tipster.FeedActionType" json:"Action,omitempty"`
	// The target ID associated with this feed item (e.g., TipId)
	TargetId string `protobuf:"bytes,4,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
	// The timestamp of when this feed action occurred
	DateCreated *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=DateCreated,proto3" json:"DateCreated,omitempty"`
	// Optional extra field to store text or additional info
	ExtraInfo     string `protobuf:"bytes,6,opt,name=ExtraInfo,proto3" json:"ExtraInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedItem) Reset() {
	*x = FeedItem{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedItem) ProtoMessage() {}

func (x *FeedItem) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedItem.ProtoReflect.Descriptor instead.
func (*FeedItem) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{55}
}

func (x *FeedItem) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

func (x *FeedItem) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *FeedItem) GetAction() FeedActionType {
	if x != nil {
		return x.Action
	}
	return FeedActionType_FEED_ACTION_UNSPECIFIED
}

func (x *FeedItem) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *FeedItem) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *FeedItem) GetExtraInfo() string {
	if x != nil {
		return x.ExtraInfo
	}
	return ""
}

type ListTipsResponse_ListTipsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tips          []*TipData             `protobuf:"bytes,1,rep,name=Tips,proto3" json:"Tips,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=NextCursor,proto3" json:"NextCursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTipsResponse_ListTipsData) Reset() {
	*x = ListTipsResponse_ListTipsData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTipsResponse_ListTipsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTipsResponse_ListTipsData) ProtoMessage() {}

func (x *ListTipsResponse_ListTipsData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTipsResponse_ListTipsData.ProtoReflect.Descriptor instead.
func (*ListTipsResponse_ListTipsData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListTipsResponse_ListTipsData) GetTips() []*TipData {
	if x != nil {
		return x.Tips
	}
	return nil
}

func (x *ListTipsResponse_ListTipsData) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

// User data message
type CreateUserResponse_UserData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	Followers     []*UserDetail          `protobuf:"bytes,7,rep,name=Followers,proto3" json:"Followers,omitempty"`
	Followings    []*UserDetail          `protobuf:"bytes,8,rep,name=Followings,proto3" json:"Followings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserResponse_UserData) Reset() {
	*x = CreateUserResponse_UserData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserResponse_UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse_UserData) ProtoMessage() {}

func (x *CreateUserResponse_UserData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse_UserData.ProtoReflect.Descriptor instead.
func (*CreateUserResponse_UserData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{16, 0}
}

func (x *CreateUserResponse_UserData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserResponse_UserData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateUserResponse_UserData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserResponse_UserData) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateUserResponse_UserData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateUserResponse_UserData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CreateUserResponse_UserData) GetFollowers() []*UserDetail {
	if x != nil {
		return x.Followers
	}
	return nil
}

func (x *CreateUserResponse_UserData) GetFollowings() []*UserDetail {
	if x != nil {
		return x.Followings
	}
	return nil
}

type ListUserResponse_ListUsersData struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Users         []*CreateUserResponse_UserData `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
	NextCursor    string                         `protobuf:"bytes,2,opt,name=NextCursor,proto3" json:"NextCursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserResponse_ListUsersData) Reset() {
	*x = ListUserResponse_ListUsersData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserResponse_ListUsersData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserResponse_ListUsersData) ProtoMessage() {}

func (x *ListUserResponse_ListUsersData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserResponse_ListUsersData.ProtoReflect.Descriptor instead.
func (*ListUserResponse_ListUsersData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{25, 0}
}

func (x *ListUserResponse_ListUsersData) GetUsers() []*CreateUserResponse_UserData {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUserResponse_ListUsersData) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type LikeTipResponse_LikeTipData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of likes after the action
	TotalLikes int32 `protobuf:"varint,1,opt,name=TotalLikes,proto3" json:"TotalLikes,omitempty"`
	// Indicates whether the current user has liked the tip (usually true if it's a Like operation)
	UserLiked     bool `protobuf:"varint,2,opt,name=UserLiked,proto3" json:"UserLiked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeTipResponse_LikeTipData) Reset() {
	*x = LikeTipResponse_LikeTipData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeTipResponse_LikeTipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeTipResponse_LikeTipData) ProtoMessage() {}

func (x *LikeTipResponse_LikeTipData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeTipResponse_LikeTipData.ProtoReflect.Descriptor instead.
func (*LikeTipResponse_LikeTipData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{27, 0}
}

func (x *LikeTipResponse_LikeTipData) GetTotalLikes() int32 {
	if x != nil {
		return x.TotalLikes
	}
	return 0
}

func (x *LikeTipResponse_LikeTipData) GetUserLiked() bool {
	if x != nil {
		return x.UserLiked
	}
	return false
}

type LikeTipResponseAlias_LikeTipData struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	TotalLikes int32                  `protobuf:"varint,1,opt,name=TotalLikes,proto3" json:"TotalLikes,omitempty"`
	// For "unlike", this will typically be false
	UserLiked     bool `protobuf:"varint,2,opt,name=UserLiked,proto3" json:"UserLiked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeTipResponseAlias_LikeTipData) Reset() {
	*x = LikeTipResponseAlias_LikeTipData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeTipResponseAlias_LikeTipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeTipResponseAlias_LikeTipData) ProtoMessage() {}

func (x *LikeTipResponseAlias_LikeTipData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeTipResponseAlias_LikeTipData.ProtoReflect.Descriptor instead.
func (*LikeTipResponseAlias_LikeTipData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{29, 0}
}

func (x *LikeTipResponseAlias_LikeTipData) GetTotalLikes() int32 {
	if x != nil {
		return x.TotalLikes
	}
	return 0
}

func (x *LikeTipResponseAlias_LikeTipData) GetUserLiked() bool {
	if x != nil {
		return x.UserLiked
	}
	return false
}

type UnlikeTipResponse_UnLikeTipData struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	TotalUnLikes int32                  `protobuf:"varint,1,opt,name=TotalUnLikes,proto3" json:"TotalUnLikes,omitempty"`
	// For "unlike", this will typically be false
	UserUnLiked   bool `protobuf:"varint,2,opt,name=UserUnLiked,proto3" json:"UserUnLiked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeTipResponse_UnLikeTipData) Reset() {
	*x = UnlikeTipResponse_UnLikeTipData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeTipResponse_UnLikeTipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeTipResponse_UnLikeTipData) ProtoMessage() {}

func (x *UnlikeTipResponse_UnLikeTipData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeTipResponse_UnLikeTipData.ProtoReflect.Descriptor instead.
func (*UnlikeTipResponse_UnLikeTipData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{30, 0}
}

func (x *UnlikeTipResponse_UnLikeTipData) GetTotalUnLikes() int32 {
	if x != nil {
		return x.TotalUnLikes
	}
	return 0
}

func (x *UnlikeTipResponse_UnLikeTipData) GetUserUnLiked() bool {
	if x != nil {
		return x.UserUnLiked
	}
	return false
}

type LikeCommentResponse_LikeCommentData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalLikes    int32                  `protobuf:"varint,1,opt,name=TotalLikes,proto3" json:"TotalLikes,omitempty"`
	UserLiked     bool                   `protobuf:"varint,2,opt,name=UserLiked,proto3" json:"UserLiked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentResponse_LikeCommentData) Reset() {
	*x = LikeCommentResponse_LikeCommentData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentResponse_LikeCommentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentResponse_LikeCommentData) ProtoMessage() {}

func (x *LikeCommentResponse_LikeCommentData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentResponse_LikeCommentData.ProtoReflect.Descriptor instead.
func (*LikeCommentResponse_LikeCommentData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{37, 0}
}

func (x *LikeCommentResponse_LikeCommentData) GetTotalLikes() int32 {
	if x != nil {
		return x.TotalLikes
	}
	return 0
}

func (x *LikeCommentResponse_LikeCommentData) GetUserLiked() bool {
	if x != nil {
		return x.UserLiked
	}
	return false
}

type UnlikeCommentResponse_UnlikeCommentData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalUnLikes  int32                  `protobuf:"varint,1,opt,name=TotalUnLikes,proto3" json:"TotalUnLikes,omitempty"`
	UserUnLiked   bool                   `protobuf:"varint,2,opt,name=UserUnLiked,proto3" json:"UserUnLiked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeCommentResponse_UnlikeCommentData) Reset() {
	*x = UnlikeCommentResponse_UnlikeCommentData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeCommentResponse_UnlikeCommentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeCommentResponse_UnlikeCommentData) ProtoMessage() {}

func (x *UnlikeCommentResponse_UnlikeCommentData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeCommentResponse_UnlikeCommentData.ProtoReflect.Descriptor instead.
func (*UnlikeCommentResponse_UnlikeCommentData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{39, 0}
}

func (x *UnlikeCommentResponse_UnlikeCommentData) GetTotalUnLikes() int32 {
	if x != nil {
		return x.TotalUnLikes
	}
	return 0
}

func (x *UnlikeCommentResponse_UnlikeCommentData) GetUserUnLiked() bool {
	if x != nil {
		return x.UserUnLiked
	}
	return false
}

type ReplyCommentResponse_ReplyData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the reply
	ReplyId string `protobuf:"bytes,1,opt,name=ReplyId,proto3" json:"ReplyId,omitempty"`
	// The parent comment ID
	ParentCommentId string `protobuf:"bytes,2,opt,name=ParentCommentId,proto3" json:"ParentCommentId,omitempty"`
	// The user who created this reply
	UserId string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	// The reply text
	Content string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	// Timestamp
	DateCreated   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=DateCreated,proto3" json:"DateCreated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyCommentResponse_ReplyData) Reset() {
	*x = ReplyCommentResponse_ReplyData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentResponse_ReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentResponse_ReplyData) ProtoMessage() {}

func (x *ReplyCommentResponse_ReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentResponse_ReplyData.ProtoReflect.Descriptor instead.
func (*ReplyCommentResponse_ReplyData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{41, 0}
}

func (x *ReplyCommentResponse_ReplyData) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *ReplyCommentResponse_ReplyData) GetParentCommentId() string {
	if x != nil {
		return x.ParentCommentId
	}
	return ""
}

func (x *ReplyCommentResponse_ReplyData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReplyCommentResponse_ReplyData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyCommentResponse_ReplyData) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

type FollowTipsterResponse_FollowData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates if the user is now following this tipster
	IsFollowing bool `protobuf:"varint,1,opt,name=IsFollowing,proto3" json:"IsFollowing,omitempty"`
	// The tipster's ID
	TipsterId string `protobuf:"bytes,2,opt,name=TipsterId,proto3" json:"TipsterId,omitempty"`
	// The user who followed
	UserId        string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FollowTipsterResponse_FollowData) Reset() {
	*x = FollowTipsterResponse_FollowData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FollowTipsterResponse_FollowData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowTipsterResponse_FollowData) ProtoMessage() {}

func (x *FollowTipsterResponse_FollowData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowTipsterResponse_FollowData.ProtoReflect.Descriptor instead.
func (*FollowTipsterResponse_FollowData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{50, 0}
}

func (x *FollowTipsterResponse_FollowData) GetIsFollowing() bool {
	if x != nil {
		return x.IsFollowing
	}
	return false
}

func (x *FollowTipsterResponse_FollowData) GetTipsterId() string {
	if x != nil {
		return x.TipsterId
	}
	return ""
}

func (x *FollowTipsterResponse_FollowData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UnfollowTipsterResponse_UnfollowData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates if the user is now following this tipster (usually false for unfollow)
	IsFollowing bool `protobuf:"varint,1,opt,name=IsFollowing,proto3" json:"IsFollowing,omitempty"`
	// The tipster's ID
	TipsterId string `protobuf:"bytes,2,opt,name=TipsterId,proto3" json:"TipsterId,omitempty"`
	// The user who unfollowed
	UserId        string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnfollowTipsterResponse_UnfollowData) Reset() {
	*x = UnfollowTipsterResponse_UnfollowData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnfollowTipsterResponse_UnfollowData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfollowTipsterResponse_UnfollowData) ProtoMessage() {}

func (x *UnfollowTipsterResponse_UnfollowData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfollowTipsterResponse_UnfollowData.ProtoReflect.Descriptor instead.
func (*UnfollowTipsterResponse_UnfollowData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{52, 0}
}

func (x *UnfollowTipsterResponse_UnfollowData) GetIsFollowing() bool {
	if x != nil {
		return x.IsFollowing
	}
	return false
}

func (x *UnfollowTipsterResponse_UnfollowData) GetTipsterId() string {
	if x != nil {
		return x.TipsterId
	}
	return ""
}

func (x *UnfollowTipsterResponse_UnfollowData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListFollowingFeedResponse_ListFollowingFeedData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Items []*FeedItem            `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
	// Next cursor for fetching additional feed items
	NextCursor    string `protobuf:"bytes,2,opt,name=NextCursor,proto3" json:"NextCursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFollowingFeedResponse_ListFollowingFeedData) Reset() {
	*x = ListFollowingFeedResponse_ListFollowingFeedData{}
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFollowingFeedResponse_ListFollowingFeedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFollowingFeedResponse_ListFollowingFeedData) ProtoMessage() {}

func (x *ListFollowingFeedResponse_ListFollowingFeedData) ProtoReflect() protoreflect.Message {
	mi := &file_src_protos_Tipster_SocialMessage_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFollowingFeedResponse_ListFollowingFeedData.ProtoReflect.Descriptor instead.
func (*ListFollowingFeedResponse_ListFollowingFeedData) Descriptor() ([]byte, []int) {
	return file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP(), []int{54, 0}
}

func (x *ListFollowingFeedResponse_ListFollowingFeedData) GetItems() []*FeedItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListFollowingFeedResponse_ListFollowingFeedData) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

var File_src_protos_Tipster_SocialMessage_proto protoreflect.FileDescriptor

var file_src_protos_Tipster_SocialMessage_proto_rawDesc = string([]byte{
	0x0a, 0x26, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x54, 0x69, 0x70,
	0x73, 0x74, 0x65, 0x72, 0x2f, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x34, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3d,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x92, 0x01,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x66, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x2b, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x70, 0x49,
	0x64, 0x22, 0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x70, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x28,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x22, 0x6b, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xd8, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x41, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x69, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x5b,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b,
	0x0a, 0x04, 0x54, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x69,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4e,
	0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xfb, 0x02, 0x0a, 0x07,
	0x54, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x30, 0x0a, 0x05, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x4c, 0x69, 0x6b, 0x65,
	0x73, 0x12, 0x34, 0x0a, 0x07, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07,
	0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73,
	0x22, 0xd0, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xd2,
	0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x38, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x71, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x61, 0x67, 0x73, 0x22, 0x3a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x4d, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65,
	0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xf0, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x72, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4e,
	0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x3e, 0x0a, 0x0e, 0x4c,
	0x69, 0x6b, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x0f,
	0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x4b, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x6b, 0x65, 0x64, 0x22, 0x40, 0x0a, 0x10, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x70, 0x49, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x44, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x4b, 0x0a, 0x0b, 0x4c, 0x69,
	0x6b, 0x65, 0x54, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x69,
	0x6b, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x69, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x55, 0x0a, 0x0d, 0x55, 0x6e, 0x4c, 0x69,
	0x6b, 0x65, 0x54, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x22,
	0xeb, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69,
	0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x05, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x55, 0x6e, 0x6c, 0x69, 0x6b,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x22, 0x79, 0x0a,
	0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x70,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x6d, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69,
	0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x69, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x69, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x4a, 0x0a, 0x12, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd5, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x47, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c,
	0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x4f, 0x0a, 0x0f, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x6b, 0x65, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x15, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x4b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x59, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x22, 0x71, 0x0a, 0x13, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc2,
	0x02, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x42, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x1a, 0xbf, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x22, 0x45, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x33,
	0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69,
	0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x05, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x55, 0x6e, 0x6c, 0x69, 0x6b,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x22, 0x51, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x22, 0x75, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x37,
	0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x0f, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x69, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x22, 0x4c, 0x0a, 0x14, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe9,
	0x01, 0x0a, 0x15, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x44,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x64, 0x0a, 0x0a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x55, 0x6e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x17, 0x55,
	0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x48, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x66, 0x0a, 0x0c, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x70, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x70,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6e,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xff,
	0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x73, 0x67, 0x12, 0x53, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x67, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x22, 0xee, 0x01, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x46, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46,
	0x65, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x2a, 0x99, 0x01, 0x0a, 0x0e, 0x46, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x49, 0x50, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x46,
	0x45, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x4b, 0x45, 0x5f,
	0x54, 0x49, 0x50, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x50,
	0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x5f, 0x54, 0x49, 0x50, 0x10, 0x04, 0x42, 0x2e, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x01, 0x5a, 0x1a, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x54, 0x69,
	0x70, 0x73, 0x74, 0x65, 0x72, 0x3b, 0x54, 0x69, 0x70, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_src_protos_Tipster_SocialMessage_proto_rawDescOnce sync.Once
	file_src_protos_Tipster_SocialMessage_proto_rawDescData []byte
)

func file_src_protos_Tipster_SocialMessage_proto_rawDescGZIP() []byte {
	file_src_protos_Tipster_SocialMessage_proto_rawDescOnce.Do(func() {
		file_src_protos_Tipster_SocialMessage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_src_protos_Tipster_SocialMessage_proto_rawDesc), len(file_src_protos_Tipster_SocialMessage_proto_rawDesc)))
	})
	return file_src_protos_Tipster_SocialMessage_proto_rawDescData
}

var file_src_protos_Tipster_SocialMessage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_src_protos_Tipster_SocialMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_src_protos_Tipster_SocialMessage_proto_goTypes = []any{
	(FeedActionType)(0),                                     // 0: protos.Tipster.FeedActionType
	(*UpdateCommentRequest)(nil),                            // 1: protos.Tipster.UpdateCommentRequest
	(*UpdateCommentResponse)(nil),                           // 2: protos.Tipster.UpdateCommentResponse
	(*DeleteCommentRequest)(nil),                            // 3: protos.Tipster.DeleteCommentRequest
	(*DeleteCommentResponse)(nil),                           // 4: protos.Tipster.DeleteCommentResponse
	(*CreateTipRequest)(nil),                                // 5: protos.Tipster.CreateTipRequest
	(*CreateTipResponse)(nil),                               // 6: protos.Tipster.CreateTipResponse
	(*GetTipRequest)(nil),                                   // 7: protos.Tipster.GetTipRequest
	(*GetTipResponse)(nil),                                  // 8: protos.Tipster.GetTipResponse
	(*UpdateTipRequest)(nil),                                // 9: protos.Tipster.UpdateTipRequest
	(*UpdateTipResponse)(nil),                               // 10: protos.Tipster.UpdateTipResponse
	(*DeleteTipRequest)(nil),                                // 11: protos.Tipster.DeleteTipRequest
	(*DeleteTipResponse)(nil),                               // 12: protos.Tipster.DeleteTipResponse
	(*ListTipsRequest)(nil),                                 // 13: protos.Tipster.ListTipsRequest
	(*ListTipsResponse)(nil),                                // 14: protos.Tipster.ListTipsResponse
	(*TipData)(nil),                                         // 15: protos.Tipster.TipData
	(*CreateUserRequest)(nil),                               // 16: protos.Tipster.CreateUserRequest
	(*CreateUserResponse)(nil),                              // 17: protos.Tipster.CreateUserResponse
	(*UserDetail)(nil),                                      // 18: protos.Tipster.UserDetail
	(*GetUserRequest)(nil),                                  // 19: protos.Tipster.GetUserRequest
	(*GetUserResponse)(nil),                                 // 20: protos.Tipster.GetUserResponse
	(*UpdateUserRequest)(nil),                               // 21: protos.Tipster.UpdateUserRequest
	(*UpdateUserResponse)(nil),                              // 22: protos.Tipster.UpdateUserResponse
	(*DeleteUserRequest)(nil),                               // 23: protos.Tipster.DeleteUserRequest
	(*DeleteUserResponse)(nil),                              // 24: protos.Tipster.DeleteUserResponse
	(*ListUserRequest)(nil),                                 // 25: protos.Tipster.ListUserRequest
	(*ListUserResponse)(nil),                                // 26: protos.Tipster.ListUserResponse
	(*LikeTipRequest)(nil),                                  // 27: protos.Tipster.LikeTipRequest
	(*LikeTipResponse)(nil),                                 // 28: protos.Tipster.LikeTipResponse
	(*UnlikeTipRequest)(nil),                                // 29: protos.Tipster.UnlikeTipRequest
	(*LikeTipResponseAlias)(nil),                            // 30: protos.Tipster.LikeTipResponseAlias
	(*UnlikeTipResponse)(nil),                               // 31: protos.Tipster.UnlikeTipResponse
	(*CommentInfo)(nil),                                     // 32: protos.Tipster.CommentInfo
	(*CommentOnTipRequest)(nil),                             // 33: protos.Tipster.CommentOnTipRequest
	(*CommentOnTipResponse)(nil),                            // 34: protos.Tipster.CommentOnTipResponse
	(*ListTipCommentsRequest)(nil),                          // 35: protos.Tipster.ListTipCommentsRequest
	(*ListTipCommentsResponse)(nil),                         // 36: protos.Tipster.ListTipCommentsResponse
	(*LikeCommentRequest)(nil),                              // 37: protos.Tipster.LikeCommentRequest
	(*LikeCommentResponse)(nil),                             // 38: protos.Tipster.LikeCommentResponse
	(*UnlikeCommentRequest)(nil),                            // 39: protos.Tipster.UnlikeCommentRequest
	(*UnlikeCommentResponse)(nil),                           // 40: protos.Tipster.UnlikeCommentResponse
	(*ReplyCommentRequest)(nil),                             // 41: protos.Tipster.ReplyCommentRequest
	(*ReplyCommentResponse)(nil),                            // 42: protos.Tipster.ReplyCommentResponse
	(*ListCommentRepliesRequest)(nil),                       // 43: protos.Tipster.ListCommentRepliesRequest
	(*ListCommentRepliesResponse)(nil),                      // 44: protos.Tipster.ListCommentRepliesResponse
	(*ReplyInfo)(nil),                                       // 45: protos.Tipster.ReplyInfo
	(*ListCommentsRequest)(nil),                             // 46: protos.Tipster.ListCommentsRequest
	(*ListCommentsResponse)(nil),                            // 47: protos.Tipster.ListCommentsResponse
	(*ShareTipRequest)(nil),                                 // 48: protos.Tipster.ShareTipRequest
	(*ShareTipResponse)(nil),                                // 49: protos.Tipster.ShareTipResponse
	(*FollowTipsterRequest)(nil),                            // 50: protos.Tipster.FollowTipsterRequest
	(*FollowTipsterResponse)(nil),                           // 51: protos.Tipster.FollowTipsterResponse
	(*UnFollowTipsterRequest)(nil),                          // 52: protos.Tipster.UnFollowTipsterRequest
	(*UnfollowTipsterResponse)(nil),                         // 53: protos.Tipster.UnfollowTipsterResponse
	(*ListFollowingFeedRequest)(nil),                        // 54: protos.Tipster.ListFollowingFeedRequest
	(*ListFollowingFeedResponse)(nil),                       // 55: protos.Tipster.ListFollowingFeedResponse
	(*FeedItem)(nil),                                        // 56: protos.Tipster.FeedItem
	(*ListTipsResponse_ListTipsData)(nil),                   // 57: protos.Tipster.ListTipsResponse.ListTipsData
	(*CreateUserResponse_UserData)(nil),                     // 58: protos.Tipster.CreateUserResponse.UserData
	(*ListUserResponse_ListUsersData)(nil),                  // 59: protos.Tipster.ListUserResponse.ListUsersData
	(*LikeTipResponse_LikeTipData)(nil),                     // 60: protos.Tipster.LikeTipResponse.LikeTipData
	(*LikeTipResponseAlias_LikeTipData)(nil),                // 61: protos.Tipster.LikeTipResponseAlias.LikeTipData
	(*UnlikeTipResponse_UnLikeTipData)(nil),                 // 62: protos.Tipster.UnlikeTipResponse.UnLikeTipData
	(*LikeCommentResponse_LikeCommentData)(nil),             // 63: protos.Tipster.LikeCommentResponse.LikeCommentData
	(*UnlikeCommentResponse_UnlikeCommentData)(nil),         // 64: protos.Tipster.UnlikeCommentResponse.UnlikeCommentData
	(*ReplyCommentResponse_ReplyData)(nil),                  // 65: protos.Tipster.ReplyCommentResponse.ReplyData
	(*FollowTipsterResponse_FollowData)(nil),                // 66: protos.Tipster.FollowTipsterResponse.FollowData
	(*UnfollowTipsterResponse_UnfollowData)(nil),            // 67: protos.Tipster.UnfollowTipsterResponse.UnfollowData
	(*ListFollowingFeedResponse_ListFollowingFeedData)(nil), // 68: protos.Tipster.ListFollowingFeedResponse.ListFollowingFeedData
	(*timestamppb.Timestamp)(nil),                           // 69: google.protobuf.Timestamp
}
var file_src_protos_Tipster_SocialMessage_proto_depIdxs = []int32{
	15, // 0: protos.Tipster.CreateTipResponse.Data:type_name -> protos.Tipster.TipData
	15, // 1: protos.Tipster.GetTipResponse.Data:type_name -> protos.Tipster.TipData
	57, // 2: protos.Tipster.ListTipsResponse.Data:type_name -> protos.Tipster.ListTipsResponse.ListTipsData
	18, // 3: protos.Tipster.TipData.Likes:type_name -> protos.Tipster.UserDetail
	18, // 4: protos.Tipster.TipData.Unlikes:type_name -> protos.Tipster.UserDetail
	69, // 5: protos.Tipster.TipData.CreatedAt:type_name -> google.protobuf.Timestamp
	69, // 6: protos.Tipster.TipData.UpdatedAt:type_name -> google.protobuf.Timestamp
	58, // 7: protos.Tipster.CreateUserResponse.Data:type_name -> protos.Tipster.CreateUserResponse.UserData
	58, // 8: protos.Tipster.GetUserResponse.Data:type_name -> protos.Tipster.CreateUserResponse.UserData
	59, // 9: protos.Tipster.ListUserResponse.Data:type_name -> protos.Tipster.ListUserResponse.ListUsersData
	60, // 10: protos.Tipster.LikeTipResponse.Data:type_name -> protos.Tipster.LikeTipResponse.LikeTipData
	61, // 11: protos.Tipster.LikeTipResponseAlias.Data:type_name -> protos.Tipster.LikeTipResponseAlias.LikeTipData
	62, // 12: protos.Tipster.UnlikeTipResponse.Data:type_name -> protos.Tipster.UnlikeTipResponse.UnLikeTipData
	69, // 13: protos.Tipster.CommentInfo.CreatedAt:type_name -> google.protobuf.Timestamp
	69, // 14: protos.Tipster.CommentInfo.UpdatedAt:type_name -> google.protobuf.Timestamp
	18, // 15: protos.Tipster.CommentInfo.Likes:type_name -> protos.Tipster.UserDetail
	18, // 16: protos.Tipster.CommentInfo.Unlikes:type_name -> protos.Tipster.UserDetail
	32, // 17: protos.Tipster.CommentOnTipResponse.Data:type_name -> protos.Tipster.CommentInfo
	32, // 18: protos.Tipster.ListTipCommentsResponse.Comments:type_name -> protos.Tipster.CommentInfo
	63, // 19: protos.Tipster.LikeCommentResponse.Data:type_name -> protos.Tipster.LikeCommentResponse.LikeCommentData
	64, // 20: protos.Tipster.UnlikeCommentResponse.Data:type_name -> protos.Tipster.UnlikeCommentResponse.UnlikeCommentData
	65, // 21: protos.Tipster.ReplyCommentResponse.Data:type_name -> protos.Tipster.ReplyCommentResponse.ReplyData
	45, // 22: protos.Tipster.ListCommentRepliesResponse.Replies:type_name -> protos.Tipster.ReplyInfo
	69, // 23: protos.Tipster.ReplyInfo.DateCreated:type_name -> google.protobuf.Timestamp
	18, // 24: protos.Tipster.ReplyInfo.Likes:type_name -> protos.Tipster.UserDetail
	18, // 25: protos.Tipster.ReplyInfo.Unlikes:type_name -> protos.Tipster.UserDetail
	32, // 26: protos.Tipster.ListCommentsResponse.Comments:type_name -> protos.Tipster.CommentInfo
	66, // 27: protos.Tipster.FollowTipsterResponse.Data:type_name -> protos.Tipster.FollowTipsterResponse.FollowData
	67, // 28: protos.Tipster.UnfollowTipsterResponse.Data:type_name -> protos.Tipster.UnfollowTipsterResponse.UnfollowData
	68, // 29: protos.Tipster.ListFollowingFeedResponse.Data:type_name -> protos.Tipster.ListFollowingFeedResponse.ListFollowingFeedData
	0,  // 30: protos.Tipster.FeedItem.Action:type_name -> protos.Tipster.FeedActionType
	69, // 31: protos.Tipster.FeedItem.DateCreated:type_name -> google.protobuf.Timestamp
	15, // 32: protos.Tipster.ListTipsResponse.ListTipsData.Tips:type_name -> protos.Tipster.TipData
	69, // 33: protos.Tipster.CreateUserResponse.UserData.CreatedAt:type_name -> google.protobuf.Timestamp
	69, // 34: protos.Tipster.CreateUserResponse.UserData.UpdatedAt:type_name -> google.protobuf.Timestamp
	18, // 35: protos.Tipster.CreateUserResponse.UserData.Followers:type_name -> protos.Tipster.UserDetail
	18, // 36: protos.Tipster.CreateUserResponse.UserData.Followings:type_name -> protos.Tipster.UserDetail
	58, // 37: protos.Tipster.ListUserResponse.ListUsersData.Users:type_name -> protos.Tipster.CreateUserResponse.UserData
	69, // 38: protos.Tipster.ReplyCommentResponse.ReplyData.DateCreated:type_name -> google.protobuf.Timestamp
	56, // 39: protos.Tipster.ListFollowingFeedResponse.ListFollowingFeedData.Items:type_name -> protos.Tipster.FeedItem
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_src_protos_Tipster_SocialMessage_proto_init() }
func file_src_protos_Tipster_SocialMessage_proto_init() {
	if File_src_protos_Tipster_SocialMessage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_src_protos_Tipster_SocialMessage_proto_rawDesc), len(file_src_protos_Tipster_SocialMessage_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_protos_Tipster_SocialMessage_proto_goTypes,
		DependencyIndexes: file_src_protos_Tipster_SocialMessage_proto_depIdxs,
		EnumInfos:         file_src_protos_Tipster_SocialMessage_proto_enumTypes,
		MessageInfos:      file_src_protos_Tipster_SocialMessage_proto_msgTypes,
	}.Build()
	File_src_protos_Tipster_SocialMessage_proto = out.File
	file_src_protos_Tipster_SocialMessage_proto_goTypes = nil
	file_src_protos_Tipster_SocialMessage_proto_depIdxs = nil
}
