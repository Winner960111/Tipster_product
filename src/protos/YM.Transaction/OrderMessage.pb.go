// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: YM.Transaction/OrderMessage.proto

package transactionpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	_ "src/protos/YM.Common"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Merchandise struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Amount        int32                  `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Merchandise) Reset() {
	*x = Merchandise{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Merchandise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Merchandise) ProtoMessage() {}

func (x *Merchandise) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Merchandise.ProtoReflect.Descriptor instead.
func (*Merchandise) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{0}
}

func (x *Merchandise) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Merchandise) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PaymentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      int32                  `protobuf:"varint,1,opt,name=Platform,proto3" json:"Platform,omitempty"`    // ref: PaymentPlatform
	PaymentId1    string                 `protobuf:"bytes,2,opt,name=PaymentId1,proto3" json:"PaymentId1,omitempty"` // Stripe: Subscription_Id
	PaymentId2    string                 `protobuf:"bytes,3,opt,name=PaymentId2,proto3" json:"PaymentId2,omitempty"` // Stripe: Session_Id
	PaymentId3    string                 `protobuf:"bytes,4,opt,name=PaymentId3,proto3" json:"PaymentId3,omitempty"`
	PaymentLink   string                 `protobuf:"bytes,5,opt,name=PaymentLink,proto3" json:"PaymentLink,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=Status,proto3" json:"Status,omitempty"` // 平台自己的狀態, aka PlatformStatus
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentInfo) Reset() {
	*x = PaymentInfo{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentInfo) ProtoMessage() {}

func (x *PaymentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentInfo.ProtoReflect.Descriptor instead.
func (*PaymentInfo) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentInfo) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *PaymentInfo) GetPaymentId1() string {
	if x != nil {
		return x.PaymentId1
	}
	return ""
}

func (x *PaymentInfo) GetPaymentId2() string {
	if x != nil {
		return x.PaymentId2
	}
	return ""
}

func (x *PaymentInfo) GetPaymentId3() string {
	if x != nil {
		return x.PaymentId3
	}
	return ""
}

func (x *PaymentInfo) GetPaymentLink() string {
	if x != nil {
		return x.PaymentLink
	}
	return ""
}

func (x *PaymentInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type OrderInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OrderId            string                 `protobuf:"bytes,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`                        // unique, 系統內部使用, gen by snowflake in transaction-domain
	OrderCode          string                 `protobuf:"bytes,2,opt,name=OrderCode,proto3" json:"OrderCode,omitempty"`                    // unique, 可揭露給玩家, gen by snowflake in transaction-domain
	MemberId           string                 `protobuf:"bytes,3,opt,name=MemberId,proto3" json:"MemberId,omitempty"`                      // create時會帶過去的資料
	PackageCode        string                 `protobuf:"bytes,4,opt,name=PackageCode,proto3" json:"PackageCode,omitempty"`                // create時會帶過去的資料
	Status             int32                  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`                         // create時會帶過去的資料 (aka OrderStatus)
	LocalPrice         string                 `protobuf:"bytes,6,opt,name=LocalPrice,proto3" json:"LocalPrice,omitempty"`                  // create時會帶過去的資料 (快照用途)
	LocalCurrency      string                 `protobuf:"bytes,7,opt,name=LocalCurrency,proto3" json:"LocalCurrency,omitempty"`            // create時會帶過去的資料
	SubscriptionType   int32                  `protobuf:"varint,8,opt,name=SubscriptionType,proto3" json:"SubscriptionType,omitempty"`     // create時會帶過去的資料, 0: none, 1: monthly, 2: yearly
	BuyIn              []*Merchandise         `protobuf:"bytes,9,rep,name=BuyIn,proto3" json:"BuyIn,omitempty"`                            // create時會帶過去的資料
	DateCreated        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=DateCreated,proto3" json:"DateCreated,omitempty"`               // transaction-domain的時間
	DateUpdated        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=DateUpdated,proto3" json:"DateUpdated,omitempty"`               // transaction-domain的時間
	Payment            *PaymentInfo           `protobuf:"bytes,12,opt,name=Payment,proto3" json:"Payment,omitempty"`                       // Platform + PaymentId1、2、3 為付款平台上的識別，需為unique (mongodb可以在排除空值後建出3組unique key)
	CurrentPeriodStart *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=CurrentPeriodStart,proto3" json:"CurrentPeriodStart,omitempty"` // 後續才會更新
	CurrentPeriodEnd   *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=CurrentPeriodEnd,proto3" json:"CurrentPeriodEnd,omitempty"`     // 後續才會更新
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OrderInfo) Reset() {
	*x = OrderInfo{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfo) ProtoMessage() {}

func (x *OrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfo.ProtoReflect.Descriptor instead.
func (*OrderInfo) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{2}
}

func (x *OrderInfo) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderInfo) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *OrderInfo) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *OrderInfo) GetPackageCode() string {
	if x != nil {
		return x.PackageCode
	}
	return ""
}

func (x *OrderInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderInfo) GetLocalPrice() string {
	if x != nil {
		return x.LocalPrice
	}
	return ""
}

func (x *OrderInfo) GetLocalCurrency() string {
	if x != nil {
		return x.LocalCurrency
	}
	return ""
}

func (x *OrderInfo) GetSubscriptionType() int32 {
	if x != nil {
		return x.SubscriptionType
	}
	return 0
}

func (x *OrderInfo) GetBuyIn() []*Merchandise {
	if x != nil {
		return x.BuyIn
	}
	return nil
}

func (x *OrderInfo) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

func (x *OrderInfo) GetDateUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateUpdated
	}
	return nil
}

func (x *OrderInfo) GetPayment() *PaymentInfo {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *OrderInfo) GetCurrentPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentPeriodStart
	}
	return nil
}

func (x *OrderInfo) GetCurrentPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentPeriodEnd
	}
	return nil
}

type UpdatePaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	PaymentId1    string                 `protobuf:"bytes,2,opt,name=PaymentId1,proto3" json:"PaymentId1,omitempty"`   // 帶空值表示不更新
	PaymentId2    string                 `protobuf:"bytes,3,opt,name=PaymentId2,proto3" json:"PaymentId2,omitempty"`   // 帶空值表示不更新
	PaymentId3    string                 `protobuf:"bytes,4,opt,name=PaymentId3,proto3" json:"PaymentId3,omitempty"`   // 帶空值表示不更新
	PaymentLink   string                 `protobuf:"bytes,5,opt,name=PaymentLink,proto3" json:"PaymentLink,omitempty"` // 帶空值表示不更新
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePaymentRequest) Reset() {
	*x = UpdatePaymentRequest{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentRequest) ProtoMessage() {}

func (x *UpdatePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentRequest) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePaymentRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdatePaymentRequest) GetPaymentId1() string {
	if x != nil {
		return x.PaymentId1
	}
	return ""
}

func (x *UpdatePaymentRequest) GetPaymentId2() string {
	if x != nil {
		return x.PaymentId2
	}
	return ""
}

func (x *UpdatePaymentRequest) GetPaymentId3() string {
	if x != nil {
		return x.PaymentId3
	}
	return ""
}

func (x *UpdatePaymentRequest) GetPaymentLink() string {
	if x != nil {
		return x.PaymentLink
	}
	return ""
}

type CreateOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"` // response code, e.g. COMM0000
	OrderId       string                 `protobuf:"bytes,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	OrderCode     string                 `protobuf:"bytes,3,opt,name=OrderCode,proto3" json:"OrderCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrderResponse) Reset() {
	*x = CreateOrderResponse{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponse) ProtoMessage() {}

func (x *CreateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOrderResponse) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{4}
}

func (x *CreateOrderResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreateOrderResponse) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

// 這個時候才建立PaymentInfo
type CreateOrderPaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	Payment       *PaymentInfo           `protobuf:"bytes,2,opt,name=Payment,proto3" json:"Payment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrderPaymentRequest) Reset() {
	*x = CreateOrderPaymentRequest{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderPaymentRequest) ProtoMessage() {}

func (x *CreateOrderPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderPaymentRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderPaymentRequest) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{5}
}

func (x *CreateOrderPaymentRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreateOrderPaymentRequest) GetPayment() *PaymentInfo {
	if x != nil {
		return x.Payment
	}
	return nil
}

type UpdatePaymentResultRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrderId        string                 `protobuf:"bytes,1,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	PlatformStatus string                 `protobuf:"bytes,2,opt,name=PlatformStatus,proto3" json:"PlatformStatus,omitempty"` // 帶none 表示不更新
	OrderStatus    int32                  `protobuf:"varint,3,opt,name=OrderStatus,proto3" json:"OrderStatus,omitempty"`      // 帶none 表示不更新
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdatePaymentResultRequest) Reset() {
	*x = UpdatePaymentResultRequest{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePaymentResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentResultRequest) ProtoMessage() {}

func (x *UpdatePaymentResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentResultRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentResultRequest) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePaymentResultRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdatePaymentResultRequest) GetPlatformStatus() string {
	if x != nil {
		return x.PlatformStatus
	}
	return ""
}

func (x *UpdatePaymentResultRequest) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

type TransactionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=TransactionId,proto3" json:"TransactionId,omitempty"` // unique, 系統內部使用, gen by snowflake in transaction-domain
	Platform      int32                  `protobuf:"varint,2,opt,name=Platform,proto3" json:"Platform,omitempty"`
	PlatformId    string                 `protobuf:"bytes,3,opt,name=PlatformId,proto3" json:"PlatformId,omitempty"` // 平台自己的Id, e.g. stripe的invoice.id
	OrderId       string                 `protobuf:"bytes,4,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`           // 平台自己的狀態, 例如stripe的invoice.status
	PaymentLink   string                 `protobuf:"bytes,6,opt,name=PaymentLink,proto3" json:"PaymentLink,omitempty"` // 建立時就確定的資料，後續不會再變動
	PeriodStart   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=PeriodStart,proto3" json:"PeriodStart,omitempty"`
	PeriodEnd     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=PeriodEnd,proto3" json:"PeriodEnd,omitempty"`
	DateCreated   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=DateCreated,proto3" json:"DateCreated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionInfo) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionInfo) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *TransactionInfo) GetPlatformId() string {
	if x != nil {
		return x.PlatformId
	}
	return ""
}

func (x *TransactionInfo) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TransactionInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionInfo) GetPaymentLink() string {
	if x != nil {
		return x.PaymentLink
	}
	return ""
}

func (x *TransactionInfo) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *TransactionInfo) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

func (x *TransactionInfo) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

type SearchOrderByPlatformId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      int32                  `protobuf:"varint,1,opt,name=Platform,proto3" json:"Platform,omitempty"`
	PaymentId1    string                 `protobuf:"bytes,2,opt,name=PaymentId1,proto3" json:"PaymentId1,omitempty"` // 帶空值表示不套用於搜尋條件
	PaymentId2    string                 `protobuf:"bytes,3,opt,name=PaymentId2,proto3" json:"PaymentId2,omitempty"` // 帶空值表示不套用於搜尋條件
	PaymentId3    string                 `protobuf:"bytes,4,opt,name=PaymentId3,proto3" json:"PaymentId3,omitempty"` // 帶空值表示不套用於搜尋條件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchOrderByPlatformId) Reset() {
	*x = SearchOrderByPlatformId{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOrderByPlatformId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOrderByPlatformId) ProtoMessage() {}

func (x *SearchOrderByPlatformId) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOrderByPlatformId.ProtoReflect.Descriptor instead.
func (*SearchOrderByPlatformId) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{8}
}

func (x *SearchOrderByPlatformId) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *SearchOrderByPlatformId) GetPaymentId1() string {
	if x != nil {
		return x.PaymentId1
	}
	return ""
}

func (x *SearchOrderByPlatformId) GetPaymentId2() string {
	if x != nil {
		return x.PaymentId2
	}
	return ""
}

func (x *SearchOrderByPlatformId) GetPaymentId3() string {
	if x != nil {
		return x.PaymentId3
	}
	return ""
}

type GetOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"` // response code, e.g. COMM0000
	Order         *OrderInfo             `protobuf:"bytes,2,opt,name=Order,proto3" json:"Order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{9}
}

func (x *GetOrderResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetOrderResponse) GetOrder() *OrderInfo {
	if x != nil {
		return x.Order
	}
	return nil
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"` // response code, e.g. COMM0000
	Orders        []*OrderInfo           `protobuf:"bytes,2,rep,name=Orders,proto3" json:"Orders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{10}
}

func (x *GetOrdersResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetOrdersResponse) GetOrders() []*OrderInfo {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"` // response code, e.g. COMM0000
	Transaction   *TransactionInfo       `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionResponse) Reset() {
	*x = GetTransactionResponse{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponse) ProtoMessage() {}

func (x *GetTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetTransactionResponse) GetTransaction() *TransactionInfo {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GetTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"` // response code, e.g. COMM0000
	Transactions  []*TransactionInfo     `protobuf:"bytes,2,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionsResponse) Reset() {
	*x = GetTransactionsResponse{}
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsResponse) ProtoMessage() {}

func (x *GetTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_YM_Transaction_OrderMessage_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_YM_Transaction_OrderMessage_proto_rawDescGZIP(), []int{12}
}

func (x *GetTransactionsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetTransactionsResponse) GetTransactions() []*TransactionInfo {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_YM_Transaction_OrderMessage_proto protoreflect.FileDescriptor

var file_YM_Transaction_OrderMessage_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x1d, 0x59, 0x4d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x59, 0x4d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xc3, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x33, 0x12, 0x20, 0x0a, 0x0b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x85, 0x05, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x42, 0x75, 0x79, 0x49, 0x6e, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x52,
	0x05, 0x42, 0x75, 0x79, 0x49, 0x6e, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x12, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x12, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x22, 0xb2, 0x01,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x31,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x33, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x33,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x22, 0x61, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6c, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfd, 0x02, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x3c, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x31, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x31, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x33, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x33, 0x22, 0x57,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x22, 0x6f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x41, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x4d, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x42, 0x5a, 0x27, 0x73, 0x72, 0x63, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x59, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x70, 0x62, 0xaa, 0x02, 0x16, 0x59, 0x4d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_YM_Transaction_OrderMessage_proto_rawDescOnce sync.Once
	file_YM_Transaction_OrderMessage_proto_rawDescData []byte
)

func file_YM_Transaction_OrderMessage_proto_rawDescGZIP() []byte {
	file_YM_Transaction_OrderMessage_proto_rawDescOnce.Do(func() {
		file_YM_Transaction_OrderMessage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_YM_Transaction_OrderMessage_proto_rawDesc), len(file_YM_Transaction_OrderMessage_proto_rawDesc)))
	})
	return file_YM_Transaction_OrderMessage_proto_rawDescData
}

var file_YM_Transaction_OrderMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_YM_Transaction_OrderMessage_proto_goTypes = []any{
	(*Merchandise)(nil),                // 0: YM.Transaction.Merchandise
	(*PaymentInfo)(nil),                // 1: YM.Transaction.PaymentInfo
	(*OrderInfo)(nil),                  // 2: YM.Transaction.OrderInfo
	(*UpdatePaymentRequest)(nil),       // 3: YM.Transaction.UpdatePaymentRequest
	(*CreateOrderResponse)(nil),        // 4: YM.Transaction.CreateOrderResponse
	(*CreateOrderPaymentRequest)(nil),  // 5: YM.Transaction.CreateOrderPaymentRequest
	(*UpdatePaymentResultRequest)(nil), // 6: YM.Transaction.UpdatePaymentResultRequest
	(*TransactionInfo)(nil),            // 7: YM.Transaction.TransactionInfo
	(*SearchOrderByPlatformId)(nil),    // 8: YM.Transaction.SearchOrderByPlatformId
	(*GetOrderResponse)(nil),           // 9: YM.Transaction.GetOrderResponse
	(*GetOrdersResponse)(nil),          // 10: YM.Transaction.GetOrdersResponse
	(*GetTransactionResponse)(nil),     // 11: YM.Transaction.GetTransactionResponse
	(*GetTransactionsResponse)(nil),    // 12: YM.Transaction.GetTransactionsResponse
	(*timestamppb.Timestamp)(nil),      // 13: google.protobuf.Timestamp
}
var file_YM_Transaction_OrderMessage_proto_depIdxs = []int32{
	0,  // 0: YM.Transaction.OrderInfo.BuyIn:type_name -> YM.Transaction.Merchandise
	13, // 1: YM.Transaction.OrderInfo.DateCreated:type_name -> google.protobuf.Timestamp
	13, // 2: YM.Transaction.OrderInfo.DateUpdated:type_name -> google.protobuf.Timestamp
	1,  // 3: YM.Transaction.OrderInfo.Payment:type_name -> YM.Transaction.PaymentInfo
	13, // 4: YM.Transaction.OrderInfo.CurrentPeriodStart:type_name -> google.protobuf.Timestamp
	13, // 5: YM.Transaction.OrderInfo.CurrentPeriodEnd:type_name -> google.protobuf.Timestamp
	1,  // 6: YM.Transaction.CreateOrderPaymentRequest.Payment:type_name -> YM.Transaction.PaymentInfo
	13, // 7: YM.Transaction.TransactionInfo.PeriodStart:type_name -> google.protobuf.Timestamp
	13, // 8: YM.Transaction.TransactionInfo.PeriodEnd:type_name -> google.protobuf.Timestamp
	13, // 9: YM.Transaction.TransactionInfo.DateCreated:type_name -> google.protobuf.Timestamp
	2,  // 10: YM.Transaction.GetOrderResponse.Order:type_name -> YM.Transaction.OrderInfo
	2,  // 11: YM.Transaction.GetOrdersResponse.Orders:type_name -> YM.Transaction.OrderInfo
	7,  // 12: YM.Transaction.GetTransactionResponse.Transaction:type_name -> YM.Transaction.TransactionInfo
	7,  // 13: YM.Transaction.GetTransactionsResponse.Transactions:type_name -> YM.Transaction.TransactionInfo
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_YM_Transaction_OrderMessage_proto_init() }
func file_YM_Transaction_OrderMessage_proto_init() {
	if File_YM_Transaction_OrderMessage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_YM_Transaction_OrderMessage_proto_rawDesc), len(file_YM_Transaction_OrderMessage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_YM_Transaction_OrderMessage_proto_goTypes,
		DependencyIndexes: file_YM_Transaction_OrderMessage_proto_depIdxs,
		MessageInfos:      file_YM_Transaction_OrderMessage_proto_msgTypes,
	}.Build()
	File_YM_Transaction_OrderMessage_proto = out.File
	file_YM_Transaction_OrderMessage_proto_goTypes = nil
	file_YM_Transaction_OrderMessage_proto_depIdxs = nil
}
