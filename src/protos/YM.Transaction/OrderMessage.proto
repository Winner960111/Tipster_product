syntax = "proto3";

package YM.Transaction;
option csharp_namespace = "YM.Message.Transaction";
option go_package = "src/protos/YM.Transaction;transactionpb";
import "YM.Common/CommonMessage.proto";
import "YM.Common/ConstantMessage.proto";
import "google/protobuf/timestamp.proto";


/*
enum PaymentPlatform {
  None = 0;
  BITPAY = 1;
  STRIPE = 2;
  ADYEN = 3;
}

enum OrderStatus {
  None = 0;
  Open = 1; // created
  Paying = 2; // payment processing, for payment methods with longer processing periods
  Activated = 3; // paid
  Expired = 4;
  Failed = 5;
  Refund = 6;
  Cancelled = 7; // unsubscribe
}

enum MerchandiseType {
  Diamond = 1;
  Gold = 2;
}
*/


message Merchandise {
  int32 Type = 1;
  int32 Amount = 2;
}

message PaymentInfo {
  int32 Platform = 1; // ref: PaymentPlatform
  string PaymentId1 = 2; // Stripe: Subscription_Id
  string PaymentId2 = 3; // Stripe: Session_Id
  string PaymentId3 = 4; 
  string PaymentLink = 5; 
  string Status = 6; // 平台自己的狀態, aka PlatformStatus
}

message OrderInfo {
  string OrderId = 1; // unique, 系統內部使用, gen by snowflake in transaction-domain
  string OrderCode = 2; // unique, 可揭露給玩家, gen by snowflake in transaction-domain
  string MemberId = 3; // create時會帶過去的資料
  string PackageCode = 4; // create時會帶過去的資料
  int32 Status = 5; // create時會帶過去的資料 (aka OrderStatus)
  string LocalPrice = 6; // create時會帶過去的資料 (快照用途)
  string LocalCurrency = 7; // create時會帶過去的資料
  int32 SubscriptionType = 8; // create時會帶過去的資料, 0: none, 1: monthly, 2: yearly 
  repeated Merchandise BuyIn = 9; // create時會帶過去的資料
  google.protobuf.Timestamp DateCreated = 10; // transaction-domain的時間
  google.protobuf.Timestamp DateUpdated = 11; // transaction-domain的時間
  PaymentInfo Payment = 12; // Platform + PaymentId1、2、3 為付款平台上的識別，需為unique (mongodb可以在排除空值後建出3組unique key)
  google.protobuf.Timestamp CurrentPeriodStart = 13; // 後續才會更新
  google.protobuf.Timestamp CurrentPeriodEnd = 14; // 後續才會更新
}

message UpdatePaymentRequest {
  string OrderId = 1;
  string PaymentId1 = 2; // 帶空值表示不更新
  string PaymentId2 = 3; // 帶空值表示不更新
  string PaymentId3 = 4; // 帶空值表示不更新
  string PaymentLink = 5; // 帶空值表示不更新
}

message CreateOrderResponse {
  string Code = 1; // response code, e.g. COMM0000
  string OrderId = 2;
  string OrderCode = 3;
}

// 這個時候才建立PaymentInfo
message CreateOrderPaymentRequest {
  string OrderId = 1;
  PaymentInfo Payment = 2;
}


message UpdatePaymentResultRequest {
  string OrderId = 1;
  string PlatformStatus = 2; // 帶none 表示不更新
  int32 OrderStatus = 3; // 帶none 表示不更新
}

message TransactionInfo {
  string TransactionId = 1; // unique, 系統內部使用, gen by snowflake in transaction-domain
  int32 Platform = 2;
  string PlatformId = 3; // 平台自己的Id, e.g. stripe的invoice.id
  string OrderId = 4;
  string Status = 5; // 平台自己的狀態, 例如stripe的invoice.status
  string PaymentLink = 6; // 建立時就確定的資料，後續不會再變動
  google.protobuf.Timestamp PeriodStart = 7;
  google.protobuf.Timestamp PeriodEnd = 8;
  google.protobuf.Timestamp DateCreated = 9;
}

message SearchOrderByPlatformId {
  int32 Platform = 1; 
  string PaymentId1 = 2; // 帶空值表示不套用於搜尋條件
  string PaymentId2 = 3; // 帶空值表示不套用於搜尋條件
  string PaymentId3 = 4; // 帶空值表示不套用於搜尋條件
}

message GetOrderResponse {
  string Code = 1; // response code, e.g. COMM0000
  OrderInfo Order = 2;
}

message GetOrdersResponse {
  string Code = 1; // response code, e.g. COMM0000
  repeated OrderInfo Orders = 2;
}

message GetTransactionResponse {
  string Code = 1; // response code, e.g. COMM0000
  TransactionInfo Transaction = 2;
}

message GetTransactionsResponse {
  string Code = 1; // response code, e.g. COMM0000
  repeated TransactionInfo Transactions = 2;
}